= ToDo

* <xsd:list> of <xsd:simpleType>
    <xsd:complexType name="PurchaseOrderType">
      <xsd:sequence>
      <xsd:element name="ShipTo" type="tns:USAddress" maxOccurs="2"/>
      <xsd:element name="BillTo" type="tns:USAddress"/>
      <xsd:element name="Items" type="tns:ItemsList"/>
      </xsd:sequence>
      <xsd:attribute name="OrderDate" type="xsd:date"/>
    </xsd:complexType>

    <xsd:simpleType name="ItemsList">
      <xsd:list>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="I001"/>
                <xsd:enumeration value="I002"/>
                <xsd:enumeration value="I003"/>
                <xsd:enumeration value="I004"/>
                <xsd:enumeration value="I005"/>
                <xsd:enumeration value="I006"/>
            </xsd:restriction>
          </xsd:simpleType>   
      </xsd:list>
    </xsd:simpleType>

  =>

    <Items>I001 I002 I003 </Items>

* <xsd:union> of <xsd:simpleType>
    <xsd:simpleType name="zipUnion">
      <xsd:union memberTypes="tns:stateType tns:zipIntType"/>
    </xsd:simpleType>
    <xsd:element name="zip" type="tns:zipUnion"/>

* <xsd:extension>

* session scope (with HTTP-Cookies) SOAP servant.
* SOAP/1.2 support.
* wsdl2ruby qualified element support; needed?
* wsdlRouter: return value must be converted to the specified element name,
  not "fooResponse" style.
* Support all derived built-in types in XML Schema Part2 Sec. 3.2.
  * normalizedString, token, language, NMTOKEN, NMTOKENS, Name, NCName, ID,
    IDREF, IDREFS, ENTITY, ENTITIES

* WSDL Strict check; order of sequence, unbound, etc.
* WSDL ref support
  子供要素を指定する場合は、新たに宣言する場合と、
  既存の要素を参照する場合があります。既存の要素を参 照する際は、
  ref属性を使用します
* Parse XML Namespace with xmlscan, not by itself.
* Support actor.
